{
  "Features": {
    "Bitness": 32,
    "EnabledHostFeatures": [],
    "DisabledHostFeatures": [
      "SVE128",
      "SVE256"
    ]
  },
  "Instructions": {
    "push es": {
      "ExpectedInstructionCount": 4,
      "Optimal": "No",
      "Comment": "0x06",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldrh w21, [x28, #136]",
        "str w21, [x20, #-4]!",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "pop es": {
      "ExpectedInstructionCount": 9,
      "Optimal": "No",
      "Comment": "0x07",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldr w21, [x20]",
        "add x20, x20, #0x4 (4)",
        "bfxil x8, x20, #0, #32",
        "strh w21, [x28, #136]",
        "ubfx x20, x21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w20, [x0, #880]",
        "str w20, [x28, #152]"
      ]
    },
    "push cs": {
      "ExpectedInstructionCount": 4,
      "Optimal": "No",
      "Comment": "0x0e",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldrh w21, [x28, #138]",
        "str w21, [x20, #-4]!",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "push ss": {
      "ExpectedInstructionCount": 4,
      "Optimal": "No",
      "Comment": "0x16",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldrh w21, [x28, #140]",
        "str w21, [x20, #-4]!",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "pop ss": {
      "ExpectedInstructionCount": 9,
      "Optimal": "No",
      "Comment": "0x17",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldr w21, [x20]",
        "add x20, x20, #0x4 (4)",
        "bfxil x8, x20, #0, #32",
        "strh w21, [x28, #140]",
        "ubfx x20, x21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w20, [x0, #880]",
        "str w20, [x28, #160]"
      ]
    },
    "push ds": {
      "ExpectedInstructionCount": 4,
      "Optimal": "No",
      "Comment": "0x1e",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldrh w21, [x28, #142]",
        "str w21, [x20, #-4]!",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "pop ds": {
      "ExpectedInstructionCount": 9,
      "Optimal": "No",
      "Comment": "0x1f",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldr w21, [x20]",
        "add x20, x20, #0x4 (4)",
        "bfxil x8, x20, #0, #32",
        "strh w21, [x28, #142]",
        "ubfx x20, x21, #3, #13",
        "add x0, x28, x20, lsl #2",
        "ldr w20, [x0, #880]",
        "str w20, [x28, #164]"
      ]
    },
    "daa": {
      "ExpectedInstructionCount": 70,
      "Optimal": "No",
      "Comment": "0x27",
      "ExpectedArm64ASM": [
        "ldr w20, [x28, #728]",
        "ubfx x21, x20, #29, #1",
        "ldrb w22, [x28, #708]",
        "mov w23, w4",
        "uxtb x23, w23",
        "mov w24, #0x0",
        "bfi w20, w24, #29, #1",
        "str w20, [x28, #728]",
        "and x20, x23, #0xf",
        "cmp x20, #0x9 (9)",
        "cset x20, hi",
        "orr x20, x22, x20",
        "cbnz x20, #+0x10",
        "mov w20, #0x0",
        "strb w20, [x28, #708]",
        "b #+0x38",
        "add x20, x23, #0x6 (6)",
        "mov w22, w4",
        "mov w0, w22",
        "bfxil w0, w20, #0, #8",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "ldr w20, [x28, #728]",
        "ubfx x22, x20, #29, #1",
        "orr w22, w21, w22",
        "bfi w20, w22, #29, #1",
        "mov w22, #0x1",
        "strb w22, [x28, #708]",
        "str w20, [x28, #728]",
        "cmp x23, #0x99 (153)",
        "cset x20, hi",
        "orr x20, x21, x20",
        "cbnz x20, #+0x20",
        "mov w20, #0x0",
        "ldr w21, [x28, #728]",
        "mov w0, w21",
        "bfi w0, w20, #29, #1",
        "mov w20, w0",
        "str w20, [x28, #728]",
        "b #+0x3c",
        "mov w20, w4",
        "uxtb x20, w20",
        "add x20, x20, #0x60 (96)",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #8",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, #0x1",
        "ldr w21, [x28, #728]",
        "mov w0, w21",
        "bfi w0, w20, #29, #1",
        "mov w20, w0",
        "str w20, [x28, #728]",
        "mov w20, w4",
        "uxtb x20, w20",
        "and x21, x20, #0x80",
        "cmp x21, #0x0 (0)",
        "cset x21, hs",
        "ldr w22, [x28, #728]",
        "mov w0, w22",
        "bfi w0, w21, #31, #1",
        "mov w21, w0",
        "and x22, x20, #0xff",
        "cmp x22, #0x0 (0)",
        "cset x22, eq",
        "bfi w21, w22, #30, #1",
        "eor x20, x20, #0x1",
        "strb w20, [x28, #706]",
        "str w21, [x28, #728]"
      ]
    },
    "das": {
      "ExpectedInstructionCount": 70,
      "Optimal": "No",
      "Comment": "0x2f",
      "ExpectedArm64ASM": [
        "ldr w20, [x28, #728]",
        "ubfx x21, x20, #29, #1",
        "ldrb w22, [x28, #708]",
        "mov w23, w4",
        "uxtb x23, w23",
        "mov w24, #0x0",
        "bfi w20, w24, #29, #1",
        "str w20, [x28, #728]",
        "and x20, x23, #0xf",
        "cmp x20, #0x9 (9)",
        "cset x20, hi",
        "orr x20, x22, x20",
        "cbnz x20, #+0x10",
        "mov w20, #0x0",
        "strb w20, [x28, #708]",
        "b #+0x38",
        "sub x20, x23, #0x6 (6)",
        "mov w22, w4",
        "mov w0, w22",
        "bfxil w0, w20, #0, #8",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "ldr w20, [x28, #728]",
        "ubfx x22, x20, #29, #1",
        "orr w22, w21, w22",
        "bfi w20, w22, #29, #1",
        "mov w22, #0x1",
        "strb w22, [x28, #708]",
        "str w20, [x28, #728]",
        "cmp x23, #0x99 (153)",
        "cset x20, hi",
        "orr x20, x21, x20",
        "cbnz x20, #+0x20",
        "mov w20, #0x0",
        "ldr w21, [x28, #728]",
        "mov w0, w21",
        "bfi w0, w20, #29, #1",
        "mov w20, w0",
        "str w20, [x28, #728]",
        "b #+0x3c",
        "mov w20, w4",
        "uxtb x20, w20",
        "sub x20, x20, #0x60 (96)",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #8",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, #0x1",
        "ldr w21, [x28, #728]",
        "mov w0, w21",
        "bfi w0, w20, #29, #1",
        "mov w20, w0",
        "str w20, [x28, #728]",
        "mov w20, w4",
        "uxtb x20, w20",
        "and x21, x20, #0x80",
        "cmp x21, #0x0 (0)",
        "cset x21, hs",
        "ldr w22, [x28, #728]",
        "mov w0, w22",
        "bfi w0, w21, #31, #1",
        "mov w21, w0",
        "and x22, x20, #0xff",
        "cmp x22, #0x0 (0)",
        "cset x22, eq",
        "bfi w21, w22, #30, #1",
        "eor x20, x20, #0x1",
        "strb w20, [x28, #706]",
        "str w21, [x28, #728]"
      ]
    },
    "aaa": {
      "ExpectedInstructionCount": 36,
      "Optimal": "No",
      "Comment": "0x37",
      "ExpectedArm64ASM": [
        "ldrb w20, [x28, #708]",
        "mov w21, w4",
        "uxtb x21, w21",
        "mov w22, w4",
        "uxth x22, w22",
        "and x21, x21, #0xf",
        "cmp x21, #0x9 (9)",
        "cset x21, hi",
        "orr x20, x20, x21",
        "cbnz x20, #+0x38",
        "mov w20, #0xff0f",
        "and x20, x22, x20",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, #0x0",
        "ldr w21, [x28, #728]",
        "bfi w21, w20, #29, #1",
        "strb w20, [x28, #708]",
        "str w21, [x28, #728]",
        "b #+0x38",
        "add x20, x22, #0x106 (262)",
        "mov w21, #0xff0f",
        "and x20, x20, x21",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, #0x1",
        "ldr w21, [x28, #728]",
        "bfi w21, w20, #29, #1",
        "strb w20, [x28, #708]",
        "str w21, [x28, #728]"
      ]
    },
    "aas": {
      "ExpectedInstructionCount": 37,
      "Optimal": "No",
      "Comment": "0x3f",
      "ExpectedArm64ASM": [
        "ldrb w20, [x28, #708]",
        "mov w21, w4",
        "uxtb x21, w21",
        "mov w22, w4",
        "uxth x22, w22",
        "and x21, x21, #0xf",
        "cmp x21, #0x9 (9)",
        "cset x21, hi",
        "orr x20, x20, x21",
        "cbnz x20, #+0x38",
        "mov w20, #0xff0f",
        "and x20, x22, x20",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, #0x0",
        "ldr w21, [x28, #728]",
        "bfi w21, w20, #29, #1",
        "strb w20, [x28, #708]",
        "str w21, [x28, #728]",
        "b #+0x3c",
        "sub x20, x22, #0x6 (6)",
        "sub x20, x20, #0x100 (256)",
        "mov w21, #0xff0f",
        "and x20, x20, x21",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, #0x1",
        "ldr w21, [x28, #728]",
        "bfi w21, w20, #29, #1",
        "strb w20, [x28, #708]",
        "str w21, [x28, #728]"
      ]
    },
    "inc ax": {
      "ExpectedInstructionCount": 27,
      "Optimal": "No",
      "Comment": "0x40",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxth x20, w20",
        "add w21, w20, #0x1 (1)",
        "mov w22, w4",
        "bfxil w22, w21, #0, #16",
        "bfxil x4, x22, #0, #32",
        "uxth x21, w21",
        "eor w22, w20, #0x1",
        "eor w22, w22, w21",
        "ubfx x22, x22, #4, #1",
        "strb w22, [x28, #708]",
        "eor x22, x21, #0x1",
        "strb w22, [x28, #706]",
        "ldr w22, [x28, #728]",
        "ubfx x22, x22, #29, #1",
        "lsl w23, w21, #16",
        "and x23, x23, #0x80000000",
        "cmp x21, #0x0 (0)",
        "cset x24, eq",
        "orr x23, x23, x24, lsl #30",
        "orr x22, x23, x22, lsl #29",
        "eor w23, w20, #0x1",
        "eor w20, w21, w20",
        "bic w20, w20, w23",
        "ubfx x20, x20, #15, #1",
        "orr x20, x22, x20, lsl #28",
        "str w20, [x28, #728]"
      ]
    },
    "inc eax": {
      "ExpectedInstructionCount": 20,
      "Optimal": "No",
      "Comment": "0x40",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "add w21, w20, #0x1 (1)",
        "bfxil x4, x21, #0, #32",
        "eor w22, w20, #0x1",
        "eor w22, w22, w21",
        "ubfx x22, x22, #4, #1",
        "strb w22, [x28, #708]",
        "eor x22, x21, #0x1",
        "strb w22, [x28, #706]",
        "ldr w22, [x28, #728]",
        "ubfx x22, x22, #29, #1",
        "tst w21, w21",
        "mrs x23, nzcv",
        "orr w22, w23, w22, lsl #29",
        "eor w23, w20, #0x1",
        "eor w20, w21, w20",
        "bic w20, w20, w23",
        "ubfx x20, x20, #31, #1",
        "orr w20, w22, w20, lsl #28",
        "str w20, [x28, #728]"
      ]
    },
    "dec ax": {
      "ExpectedInstructionCount": 27,
      "Optimal": "No",
      "Comment": "0x48",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxth x20, w20",
        "sub w21, w20, #0x1 (1)",
        "mov w22, w4",
        "bfxil w22, w21, #0, #16",
        "bfxil x4, x22, #0, #32",
        "uxth x21, w21",
        "eor w22, w20, #0x1",
        "eor w22, w22, w21",
        "ubfx x22, x22, #4, #1",
        "strb w22, [x28, #708]",
        "eor x22, x21, #0x1",
        "strb w22, [x28, #706]",
        "ldr w22, [x28, #728]",
        "ubfx x22, x22, #29, #1",
        "lsl w23, w21, #16",
        "and x23, x23, #0x80000000",
        "cmp x21, #0x0 (0)",
        "cset x24, eq",
        "orr x23, x23, x24, lsl #30",
        "orr x22, x23, x22, lsl #29",
        "eor w23, w20, #0x1",
        "eor w20, w21, w20",
        "and w20, w23, w20",
        "ubfx x20, x20, #15, #1",
        "orr x20, x22, x20, lsl #28",
        "str w20, [x28, #728]"
      ]
    },
    "dec eax": {
      "ExpectedInstructionCount": 20,
      "Optimal": "No",
      "Comment": "0x48",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "sub w21, w20, #0x1 (1)",
        "bfxil x4, x21, #0, #32",
        "eor w22, w20, #0x1",
        "eor w22, w22, w21",
        "ubfx x22, x22, #4, #1",
        "strb w22, [x28, #708]",
        "eor x22, x21, #0x1",
        "strb w22, [x28, #706]",
        "ldr w22, [x28, #728]",
        "ubfx x22, x22, #29, #1",
        "tst w21, w21",
        "mrs x23, nzcv",
        "orr w22, w23, w22, lsl #29",
        "eor w23, w20, #0x1",
        "eor w20, w21, w20",
        "and w20, w23, w20",
        "ubfx x20, x20, #31, #1",
        "orr w20, w22, w20, lsl #28",
        "str w20, [x28, #728]"
      ]
    },
    "pusha": {
      "ExpectedInstructionCount": 19,
      "Optimal": "No",
      "Comment": "0x60",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "mov w21, w4",
        "stur w21, [x20, #-4]",
        "sub w21, w20, #0x4 (4)",
        "mov w22, w5",
        "str w22, [x21, #-4]!",
        "mov w22, w6",
        "str w22, [x21, #-4]!",
        "mov w22, w7",
        "str w22, [x21, #-4]!",
        "stur w20, [x21, #-4]",
        "sub w20, w21, #0x4 (4)",
        "mov w21, w9",
        "str w21, [x20, #-4]!",
        "mov w21, w10",
        "str w21, [x20, #-4]!",
        "mov w21, w11",
        "str w21, [x20, #-4]!",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "pushad": {
      "ExpectedInstructionCount": 19,
      "Optimal": "No",
      "Comment": "0x60",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "mov w21, w4",
        "stur w21, [x20, #-4]",
        "sub w21, w20, #0x4 (4)",
        "mov w22, w5",
        "str w22, [x21, #-4]!",
        "mov w22, w6",
        "str w22, [x21, #-4]!",
        "mov w22, w7",
        "str w22, [x21, #-4]!",
        "stur w20, [x21, #-4]",
        "sub w20, w21, #0x4 (4)",
        "mov w21, w9",
        "str w21, [x20, #-4]!",
        "mov w21, w10",
        "str w21, [x20, #-4]!",
        "mov w21, w11",
        "str w21, [x20, #-4]!",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "popa": {
      "ExpectedInstructionCount": 23,
      "Optimal": "No",
      "Comment": "0x61",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldr w21, [x20]",
        "bfxil x11, x21, #0, #32",
        "add x21, x20, #0x4 (4)",
        "ldr w20, [x20, #4]",
        "bfxil x10, x20, #0, #32",
        "add x20, x21, #0x4 (4)",
        "ldr w21, [x21, #4]",
        "bfxil x9, x21, #0, #32",
        "add x21, x20, #0x8 (8)",
        "ldr w20, [x20, #8]",
        "bfxil x7, x20, #0, #32",
        "add x20, x21, #0x4 (4)",
        "ldr w21, [x21, #4]",
        "bfxil x6, x21, #0, #32",
        "add x21, x20, #0x4 (4)",
        "ldr w20, [x20, #4]",
        "bfxil x5, x20, #0, #32",
        "add x20, x21, #0x4 (4)",
        "ldr w21, [x21, #4]",
        "bfxil x4, x21, #0, #32",
        "add x20, x20, #0x4 (4)",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "popad": {
      "ExpectedInstructionCount": 23,
      "Optimal": "No",
      "Comment": "0x61",
      "ExpectedArm64ASM": [
        "mov w20, w8",
        "ldr w21, [x20]",
        "bfxil x11, x21, #0, #32",
        "add x21, x20, #0x4 (4)",
        "ldr w20, [x20, #4]",
        "bfxil x10, x20, #0, #32",
        "add x20, x21, #0x4 (4)",
        "ldr w21, [x21, #4]",
        "bfxil x9, x21, #0, #32",
        "add x21, x20, #0x8 (8)",
        "ldr w20, [x20, #8]",
        "bfxil x7, x20, #0, #32",
        "add x20, x21, #0x4 (4)",
        "ldr w21, [x21, #4]",
        "bfxil x6, x21, #0, #32",
        "add x21, x20, #0x4 (4)",
        "ldr w20, [x20, #4]",
        "bfxil x5, x20, #0, #32",
        "add x20, x21, #0x4 (4)",
        "ldr w21, [x21, #4]",
        "bfxil x4, x21, #0, #32",
        "add x20, x20, #0x4 (4)",
        "bfxil x8, x20, #0, #32"
      ]
    },
    "aam": {
      "ExpectedInstructionCount": 29,
      "Optimal": "No",
      "Comment": "0xd4",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxtb x20, w20",
        "mov w21, #0xa",
        "udiv x22, x20, x21",
        "udiv x2, x20, x21",
        "msub x20, x2, x21, x20",
        "lsl x21, x22, #8",
        "add x20, x21, x20",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, w4",
        "uxtb x20, w20",
        "and x21, x20, #0x80",
        "cmp x21, #0x0 (0)",
        "cset x21, hs",
        "ldr w22, [x28, #728]",
        "mov w0, w22",
        "bfi w0, w21, #31, #1",
        "mov w21, w0",
        "and x22, x20, #0xff",
        "cmp x22, #0x0 (0)",
        "cset x22, eq",
        "bfi w21, w22, #30, #1",
        "eor x20, x20, #0x1",
        "strb w20, [x28, #706]",
        "str w21, [x28, #728]"
      ]
    },
    "aad": {
      "ExpectedInstructionCount": 30,
      "Optimal": "No",
      "Comment": "0xd5",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxtb x20, w20",
        "mov w21, w4",
        "uxth x21, w21",
        "lsr w21, w21, #8",
        "mov w22, #0xa",
        "mul x21, x21, x22",
        "add x20, x20, x21",
        "and x20, x20, #0xff",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, w4",
        "uxtb x20, w20",
        "and x21, x20, #0x80",
        "cmp x21, #0x0 (0)",
        "cset x21, hs",
        "ldr w22, [x28, #728]",
        "mov w0, w22",
        "bfi w0, w21, #31, #1",
        "mov w21, w0",
        "and x22, x20, #0xff",
        "cmp x22, #0x0 (0)",
        "cset x22, eq",
        "bfi w21, w22, #30, #1",
        "eor x20, x20, #0x1",
        "strb w20, [x28, #706]",
        "str w21, [x28, #728]"
      ]
    },
    "db 0xd4, 0x40": {
      "ExpectedInstructionCount": 29,
      "Optimal": "No",
      "Comment": [
        "aam with a different immediate byte base",
        "0xd4"
      ],
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxtb x20, w20",
        "mov w21, #0x40",
        "udiv x22, x20, x21",
        "udiv x2, x20, x21",
        "msub x20, x2, x21, x20",
        "lsl x21, x22, #8",
        "add x20, x21, x20",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, w4",
        "uxtb x20, w20",
        "and x21, x20, #0x80",
        "cmp x21, #0x0 (0)",
        "cset x21, hs",
        "ldr w22, [x28, #728]",
        "mov w0, w22",
        "bfi w0, w21, #31, #1",
        "mov w21, w0",
        "and x22, x20, #0xff",
        "cmp x22, #0x0 (0)",
        "cset x22, eq",
        "bfi w21, w22, #30, #1",
        "eor x20, x20, #0x1",
        "strb w20, [x28, #706]",
        "str w21, [x28, #728]"
      ]
    },
    "db 0xd5, 0x40": {
      "ExpectedInstructionCount": 29,
      "Optimal": "No",
      "Comment": [
        "aad with a different immediate byte base",
        "0xd5"
      ],
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxtb x20, w20",
        "mov w21, w4",
        "uxth x21, w21",
        "lsr w21, w21, #8",
        "lsl x21, x21, #6",
        "add x20, x20, x21",
        "and x20, x20, #0xff",
        "mov w21, w4",
        "mov w0, w21",
        "bfxil w0, w20, #0, #16",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "mov w20, w4",
        "uxtb x20, w20",
        "and x21, x20, #0x80",
        "cmp x21, #0x0 (0)",
        "cset x21, hs",
        "ldr w22, [x28, #728]",
        "mov w0, w22",
        "bfi w0, w21, #31, #1",
        "mov w21, w0",
        "and x22, x20, #0xff",
        "cmp x22, #0x0 (0)",
        "cset x22, eq",
        "bfi w21, w22, #30, #1",
        "eor x20, x20, #0x1",
        "strb w20, [x28, #706]",
        "str w21, [x28, #728]"
      ]
    },
    "salc": {
      "ExpectedInstructionCount": 14,
      "Optimal": "No",
      "Comment": "0xd6",
      "ExpectedArm64ASM": [
        "mov w20, w4",
        "uxtb x20, w20",
        "ldr w21, [x28, #728]",
        "ubfx x22, x21, #29, #1",
        "add w20, w20, w22",
        "mov w22, w4",
        "uxtb x22, w22",
        "sub w20, w22, w20",
        "mov w22, w4",
        "mov w0, w22",
        "bfxil w0, w20, #0, #8",
        "mov w20, w0",
        "bfxil x4, x20, #0, #32",
        "str w21, [x28, #728]"
      ]
    }
  }
}